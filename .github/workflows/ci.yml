# GitHub Actions configuration **EXAMPLE**,
# MODIFY IT ACCORDING TO YOUR NEEDS!
# Reference: https://docs.github.com/en/actions

name: tests

on:
  push:
    # Avoid using all the resources/limits available by checking only
    # relevant branches and tags. Other branches can be checked via PRs.
    branches: [main, hotfix/hackathon]
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+\.dev[0-9]+' # Match tags that resemble a version
      - 'v[0-9]+\.[0-9]+\.[0-9]+' # Match tags that resemble a version
  pull_request: # Run in every PR
  workflow_dispatch: # Allow manually triggering the workflow
  schedule:
    # Run roughly every 15 days at 00:00 UTC
    # (useful to check if updates on dependencies break the package)
    - cron: "0 0 1,16 * *"

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - uses: actions/checkout@v3
        with: { fetch-depth: 0 } # deep clone for setuptools-scm

  test:
    needs: prepare
    strategy:
      matrix:
        python:
          - "3.10"
          # - "3.7"  # oldest Python supported by PSF
          - "3.11" # newest Python that is stable
        platform:
          - ubuntu-latest
        # - macos-latest
        # - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      # - name: Generate coverage report
      #   run: pipx run coverage lcov -o coverage.lcov
      # - name: Upload partial coverage report
      #   uses: coverallsapp/github-action@master
      #   with:
      #     path-to-lcov: coverage.lcov
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     flag-name: ${{ matrix.platform }} - py${{ matrix.python }}
      #     parallel: true

  finalize:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: echo "Finished checks"

  publish:
    needs: finalize
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/project/flexmeasures-client/
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}  # deep clone for setuptools-scm
      - name: Publish release on GitHub
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: v0.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_PAT }}

  # test-publish:
  #   needs: finalize
  #   if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/test') }}
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/project/flexmeasures-client/
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with: {python-version: "3.11"}
  #     - name: Retrieve pre-built distribution files
  #       uses: actions/download-artifact@v3
  #       with: {name: python-distribution-files, path: dist/}
  #     - name: Publish Package
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
  #       # run: pipx run tox -e publish
